<?php

namespace Bus\MailModule\Presenters\Standard;

use \Nette\Application\UI;
use Nette\Mail\SendException;

/**
 * Description of MailPresenter
 *
 * @author viky
 */
class MailPresenter extends \Bus\Presenters\Override\SecuredPresenter {

    /**
     * @inject
     * @var \Bus\MailModule\Models\Override\MailModel
     */
    public $model;

    /**
     * @var string
     */
    protected $evidence;

    /**
     * @var int
     */
    protected $doklad;

    /**
     * @var string
     */
    protected $sign;

    /**
     * @var string
     */
    protected $text;

    /**
     * @var string
     */
    protected $subject;

    /**
     * @var array
     */
    protected $copy;

    protected function startup(): void {
        parent::startup(); // TODO: Change the autogenerated stub
        $this->moduleViewAllowed('mail');
    }

    public function actionDefault(?int $id, ?string $evidence, ?string $firma) {
        $mails = $firma === null ? [] : $this->model->getEmails($firma, $evidence, $id, $this->getUser());
        $this->text = $evidence ? $this->model->getEmailText($id, $evidence) : "";
        $this->sign = $this->model->getEmailSign($this->getUser())['content'] ?? "";
        $this->template->kontakty = $mails['recipient']??[];
        $this->copy = $mails['copy'] ?? [];
        $this->evidence = $evidence;
        $this->doklad = $id;
        $this->subject = $evidence ? $this->model->getSubject($id, $evidence) : '';
    }

    public function renderDefault() {
        $this->template->evidence = $this->evidence;
    }

    protected function createComponentMailForm() {
        $form = new \Bus\Utils\BootstrapForm();
        $form->getElementPrototype()->onsubmit('tinyMCE.triggerSave()');
        $form->addText('to', 'Pro:')
                ->addRule(UI\Form::FILLED);
        $form->addText('cc', 'Kopie:')->setDefaultValue(implode(',', $this->copy));
        //$form->addText('bcc', 'BCC:');
        $form->addText('subject', 'Předmět: ')
                ->addRule(UI\Form::FILLED)->setDefaultValue($this->subject);
        $form->addTextArea('body', 'Text: ')
                ->setHtmlAttribute('class', 'mceEditor')->setDefaultValue($this->text . PHP_EOL . $this->sign);
        $form->addUpload('attachment', 'Příloha: *');
        $form->addSubmit('send', 'Odeslat');
        $form->onSuccess[] = [$this, 'mailFormSubmitted'];

        return $form;
    }

    public function mailFormSubmitted(\Nette\Application\UI\Form $form, \Nette\Utils\ArrayHash $values) {
        try {
            if ($this->evidence && $this->doklad) {
                $blob = $this->model->getPdf($this->evidence, $this->doklad);
            }
            $this->model->sendEmail((array) $values, $blob ?? null, $this->user, $this->model->getAttachmentName($this->doklad, $this->evidence));
            $this->flashMessage("Odeslání proběhlo v pořádku", 'success');
            $this->redirect('this');
        } catch (SendException $e) {
            $this->flashMessage($e->getMessage(), 'danger');
        }
    }

    public function actionTest() {
        
        //bdump("Testovací zpráva");

        //fromName: 'Jiří Černý'

        if (isset($_POST['_do'])) {
            $data = [];
            $data['imaptest'] = $_POST['imaptest'];
            $data['imapname'] = $_POST['imapname'];
            if (!empty($_POST['imappass'])) {
                $data['imappass'] = $_POST['imappass'];
            } elseif(!empty($_POST['imappassold'])) {
                $data['imappass'] = $_POST['imappassold'];
            } else {
                $data['imappass'] = '';
            }
            $data['imapserv'] = $_POST['imapserv'];
            $data['imapport'] = $_POST['imapport'];
            $data['imapsifr'] = $_POST['imapsifr'];
            $data['imapfold'] = $_POST['imapfold'];
        } else {
            $data = [];
            $data['imaptest'] = "";
            $data['imapname'] = '';
            $data['imappass'] = '';
            $data['imapserv'] = '';
            $data['imapport'] = 0;
            $data['imapsifr'] = '';
            $data['imapfold'] = '';
        }
        
        try {
            $this->model->sendTestEmail($data);
            //$this->flashMessage("Odeslání proběhlo v pořádku", 'success');
            $this->sendJson(['result' => 'OK']);
        } catch (SendException $e) {
            //$this->flashMessage($e->getMessage(), 'danger');
            $this->sendJson(['result' => 'KO']);
        }

        //poslat vysledek ajaxem
        //$this->sendJson(['John' => 'Doe']);

        die;
        

    }
}
